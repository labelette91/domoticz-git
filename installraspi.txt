*** OpenZWave support
If you need support for Open-ZWave (for example if you want to use an Aeon USB V2 zwave adapter),

- Compile OpenZWave (http://code.google.com/p/open-zwave/)
sudo apt-get update

***Install libudev-dev
We assume the specific dependencies for your system have been installed. 
sudo apt-get install libudev-dev

***Compile OpenZWave
git clone https://github.com/OpenZWave/open-zwave.git
ln -s open-zwave open-zwave-read-only
cd open-zwave
make
cd .. 

***Update OpenZWave
 cd open-zwave
 git pull
 make clean
 make
 cd .. 
 
******install cmakecd do	
sudo apt-get install cmake 

**** Install packet
sudo apt-get install build-essential -y
**sudo apt-get install cmake libboost-dev libboost-thread-dev libboost-system-dev libsqlite3-dev subversion curl libcurl4-openssl-dev libusb-dev zlib1g-dev libssl-dev git
  sudo apt-get install cmake libboost-dev libboost-thread-dev libboost-system-dev libsqlite3-dev            curl libcurl4-openssl-dev libusb-dev zlib1g-dev libssl-dev git
sudo apt-get install cmake make gcc g++ libssl-dev curl libcurl4-openssl-dev libusb-dev wiringpi

*** Intall wiring pi
git clone git://git.drogon.net/wiringPi
cd wiringPi
./build

Re: WiringPi library not found. GPIO support disabled

.. sous directory
cd wiringPi
./build uninstall
cd wiringPi
make static
sudo make install-static


cmake -DCMAKE_BUILD_TYPE=Release CMakeLists.txt


***Domoticz Source
git clone https://github.com/domoticz/domoticz.git dev-domoticz
cd dev-domoticz
cmake -DCMAKE_BUILD_TYPE=Release CMakeLists.txt
make  -j 3

*** clone branch

git clone --branch development https://github.com/domoticz/domoticz.git dev-domoticz


***** Make Domoticz startup at boot time (Also needed for Web Update)
sudo cp domoticz.sh /etc/init.d
sudo chmod +x /etc/init.d/domoticz.sh
sudo update-rc.d domoticz.sh defaults

Edit the startup script and change the USERNAME, DAEMON and DAEMON_ARGS parameters to reflect your current settings 
sudo vi /etc/init.d/domoticz.sh

USERNAME=pi
DAEMON=/home/$USERNAME/domoticz/$NAME
DAEMON_ARGS="-daemon -www 8080"

If you want to use another web interface port change: 
DAEMON_ARGS="-daemon -www 8080"

**** Restart periodique 
crontab -e
ajouter
0,10,20,30,40,50  * * * * root /home/pi/domoticz/start.sh &> /dev/null

* log en ram 
Pour déplacer ces répertoires en RAM, il convient d’éditer le fichier /etc/fstab qui gère les points de montages du système. Ajouter les lignes suivantes :
sudo nano /etc/fstab
tmpfs /tmp tmpfs defaults,noatime,nosuid,size=10m 0 0
tmpfs /var/tmp tmpfs defaults,noatime,nosuid,size=10m 0 0
tmpfs /var/log tmpfs defaults,noatime,nosuid,mode=0755,size=10m 0 0
redemarer

*swapp off
La commande est dphys-swapfile swapoff (dphys-swapfile swapon permet de l’activer !)
 
root@raspberrypi:/var# dphys-swapfile swapoff
root@raspberrypi:/var# free
total       used       free     shared    buffers     cached
Mem:        447996     388092      59904          0      16200     265956
-/+ buffers/cache:     105936     342060
Swap:            0          0          0

***Raspberry Pi : un serveur FTP
sudo apt-get install vsftpd

Une fois les paquets de VSFTPD téléchargés et installés, 
ouvrez avec les droits d'administration le fichier /etc/vsftpd.conf pour le modifier comme ceci : 

sudo nano /etc/vsftpd.conf
Pour commencer, modifier les lignes suivantes, soit en les dé-commentant, soit en indiquant YES ou NO : 

Anonymous_enable=NO
Local_enable=YES
Write_enable=YES
Ascii_upload_enable=YES
Ascii_download_enable=YES.

Redémarrez le RPI pour activer tout ce que vous avez fait jusqu'ici. Pour ce faire, tapez dans le terminal : 
sudo reboot



rs232********************************
https://www.domoticz.com/wiki/PersistentUSBDevices

Alternative filtering
When there is a situation that there are more devices with for example the same vendor and product 
and have no serial number, you can use the command below to add some other filtering. 
udevadm info -a -n /dev/ttyUSBX  
  
  looking at device '/devices/platform/soc/20980000.usb/usb1/1-1/1-1.3/1-1.3:1.0/ttyUSB0/tty/ttyUSB0':
    KERNEL=="ttyUSB0"

    ATTRS{interface}=="FT232R USB UART"

    ATTRS{idVendor}=="0403"
    ATTRS{idProduct}=="6001"
    ATTRS{product}=="FT232R USB UART"
    ATTRS{serial}=="AJV9MW4F"
    ATTRS{devpath}=="1.3"
    ATTRS{interface}=="FT232R USB UART"


  looking at device '/devices/platform/soc/20980000.usb/usb1/1-1/1-1.2/1-1.2:1.0/ttyUSB1/tty/ttyUSB1':
    KERNEL=="ttyUSB1"
    KERNELS=="ttyUSB1"
    SUBSYSTEMS=="usb-serial"

    DRIVERS=="cp210x"
    ATTRS{interface}=="CP2102 USB to UART Bridge Controller"

    ATTRS{idVendor}=="10c4"
    ATTRS{idProduct}=="ea60"
    ATTRS{devpath}=="1.2"
    ATTRS{serial}=="0001"


Create a rules file, with the following example content:

sudo nano /etc/udev/rules.d/99-usb-serial.rules

Alternatively, you can reload the udev rules without rebooting by running the following command:
sudo udevadm control --reload

copy line 

RFX-433
SUBSYSTEM=="tty", ATTRS{idVendor}=="0403", ATTRS{idProduct}=="6001", ATTRS{serial}=="123YAOOW", SYMLINK+="ttyUSB-RFX433-A"

FTDI
SUBSYSTEM=="tty", ATTRS{idVendor}=="0403", ATTRS{idProduct}=="6001" , SYMLINK+="ttyUSB-RFX433"

AeoTec Z-Stick
SUBSYSTEM=="tty", ATTRS{idVendor}=="10c4", ATTRS{idProduct}=="ea60", SYMLINK+="ttyUSB-ZStick-2G"

list packet :
sudo  apt-get update


[RaspberryPI] How to turn off HDMI from Raspberry pi
Raspberry pi Linux image does not come with sleep mode after timeout. Though it has kind of sleepmode which does blacken screen, bout monitor does not go to sleep or switch off.

To prevent HDMI TV/monitor on constantly switched on , i would recommend to switch off programmatically via ssh service.

use videocore GPU command  to switch off or on HDMI service thus saving valuable watts??

Switch on
“/opt/vc/bin/tvservice -p”

Switch off
“/opt/vc/bin/tvservice -o” 

put it in the /etc/rc.local file



===  install gcc+ 4.6 on RASPBIAN JESSIE with 4.9 already installed (see upper comment ) ===  
To Install gcc-4.6 g++-4.6 on Raspberry Pi, enter the following commands:

  sudo apt-get install gcc-4.6 g++-4.6

If we type gcc -v at this moment, the default version is still 4.9. 
So we are going to change that to make the newer gcc 4.6 the default version. 
First remove all gcc alternatives.

  sudo update-alternatives --remove-all gcc
  sudo update-alternatives --remove-all g++

  sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.6 40 --slave /usr/bin/g++ g++ /usr/bin/g++-4.6
  sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 60 --slave /usr/bin/g++ g++ /usr/bin/g++-4.9

At this stage, if you type gcc-v it should show version 4.9. 
You have to change the default compiler with the following command.

Run the the command and select gcc-4.6.
  sudo update-alternatives --config gcc 

Now, if you type gcc-v it should show version 4.6.



*************install gcc 4.9 
sudo apt-get update
sudo apt-get upgrade

now we can finally install install GCC 4.9

sudo apt-get install gcc-4.9 g++-4.9

If we type gcc -v at this moment, the default version is still 4.7. 
So we are going to change that to make the newer gcc 4.9 the default version. 
First remove all gcc alternatives.

sudo update-alternatives --remove-all gcc
sudo update-alternatives --remove-all g++

And now add both gcc alternatives with more priority to GCC 4.9 version.

sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.6 40 --slave /usr/bin/g++ g++ /usr/bin/g++-4.6
sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 60 --slave /usr/bin/g++ g++ /usr/bin/g++-4.9

At this stage, if you type gcc-v it should show version 4.9.2 or greater. 
You can always change the default compiler with the following command.

sudo update-alternatives --config gcc

4970402667184051


split git subdirectorie : detruit tout le reste
git filter-branch --prune-empty --subdirectory-filter ./hardware/rfrpi_src  master




cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXE_LINKER_FLAGS=-lboost_atomic CMakeLists.txt 



git clone https://github.com/labelette91/domoticz-git.git domoticz-git




http://labelette91:catheri@192.168.1.17:8091/json.htm?type=command&param=switchlight&idx=59&switchcmd=Off&level=0&passcode=

http://labelette91:catheri@192.168.1.17:8091/json.htm?type=command&param=switchlight&idx=59&switchcmd=On&level=0&passcode=


http://labelette91:catheri@192.168.1.17:8080/json.htm?type=command&param=thermostatstate&state=1&name=ThSalle

http://labelette91:catheri@192.168.1.17:8080/json.htm?type=command&param=thermostatstate&state=0&name=ThSalle




***************************************************************************************
Configure Network Settings on Raspberry Pi Hardware

Display the contents of the /etc/network/interfaces file. Enter:

cat /etc/network/interfaces 
If the board is configured to use DHCP services (the default configuration), dhcp appears at the end of the following line:

iface eth0 inet dhcp
If the board is configured to use static IP settings, static appears at the end of the following line:

iface eth0 inet static


Create a backup of the /etc/network/interfaces file. Enter:

sudo cp /etc/network/interfaces /etc/network/interfaces.backup
If prompted, enter the root password.

Edit interfaces using a simple editor called nano. Enter:

sudo nano /etc/network/interfaces
Edit the last word of line that starts with iface eth0 inet.

To use DHCP services, change the line to:

iface eth0 inet dhcp
To use static IP settings, change the line to:

iface eth0 inet static
For static IP settings, add lines for address, netmask, and gateway. For example:

iface eth0 inet static
    address 192.168.1.2
    netmask 255.255.255.0
    gateway 192.168.1.1
For static IP settings:

The value of the subnet mask must be the same for all devices on the network.

The value of the IP address must be unique for each device on the network.

For example, if the Ethernet port on your host computer has a network mask of 255.255.255.0 and a static IP address of 192.168.1.1, set:

netmask to use the same network mask value, 255.255.255.0.

address to an unused IP address, between 192.168.1.2 and 192.168.1.254.

Save the changes and exit nano:

Press Ctrl+X.

Enter Y to save the modified buffer.

For “File Name to Write: /etc/network/interfaces”, press Enter.

The nano editor confirms that it “Wrote # lines” and returns control to the command line.

Reboot the board. In MATLAB® Command Window, enter:

h = raspberrypi
h.execute('sudo shutdown -r now')
Test the IP settings by logging in to the board over a telnet session.

sudo /etc/init.d/networking restart
 ifdown eth0
  ifup eth0

***************************************************************
force fsck a charque demarage
sudo tune2fs -c 1 /dev/sda2
